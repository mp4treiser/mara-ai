#!/usr/bin/env node
/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
 */

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
const fs = require('fs');
const path = require('path');

const requiredFiles = [
  'src/api/auth.ts',
  'src/contexts/AuthContext.tsx',
  'src/components/ProtectedRoute.tsx',
  'src/pages/LoginPage.tsx',
  'src/pages/RegisterPage.tsx',
  'src/pages/ProfilePage.tsx',
  'src/app.tsx',
  'package.json'
];

console.log('üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤:');
let allFilesExist = true;

requiredFiles.forEach(file => {
  const filePath = path.join(__dirname, file);
  if (fs.existsSync(filePath)) {
    console.log(`   ‚úÖ ${file}`);
  } else {
    console.log(`   ‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
    allFilesExist = false;
  }
});

console.log('\nüîß –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json:');
try {
  const packageJson = JSON.parse(fs.readFileSync(path.join(__dirname, 'package.json'), 'utf8'));
  
  const requiredDeps = ['react', 'react-dom', 'react-router-dom'];
  const requiredDevDeps = ['typescript', 'webpack'];
  
  console.log('   –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:');
  requiredDeps.forEach(dep => {
    if (packageJson.dependencies && packageJson.dependencies[dep]) {
      console.log(`     ‚úÖ ${dep}: ${packageJson.dependencies[dep]}`);
    } else {
      console.log(`     ‚ùå ${dep} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
  
  console.log('   Dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:');
  requiredDevDeps.forEach(dep => {
    if (packageJson.devDependencies && packageJson.devDependencies[dep]) {
      console.log(`     ‚úÖ ${dep}: ${packageJson.devDependencies[dep]}`);
    } else {
      console.log(`     ‚ùå ${dep} - –ù–ï –ù–ê–ô–î–ï–ù`);
      allFilesExist = false;
    }
  });
  
  console.log('   –°–∫—Ä–∏–ø—Ç—ã:');
  if (packageJson.scripts) {
    if (packageJson.scripts.start) {
      console.log(`     ‚úÖ start: ${packageJson.scripts.start}`);
    } else {
      console.log('     ‚ùå start - –ù–ï –ù–ê–ô–î–ï–ù');
      allFilesExist = false;
    }
    
    if (packageJson.scripts.build) {
      console.log(`     ‚úÖ build: ${packageJson.scripts.build}`);
    } else {
      console.log('     ‚ùå build - –ù–ï –ù–ê–ô–î–ï–ù');
      allFilesExist = false;
    }
  }
  
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json: ${error.message}`);
  allFilesExist = false;
}

console.log('\nüîå –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:');
try {
  const authFile = fs.readFileSync(path.join(__dirname, 'src/api/auth.ts'), 'utf8');
  
  if (authFile.includes('API_BASE_URL')) {
    console.log('   ‚úÖ API_BASE_URL –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  } else {
    console.log('   ‚ùå API_BASE_URL –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
  if (authFile.includes('authAPI')) {
    console.log('   ‚úÖ authAPI —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
  } else {
    console.log('   ‚ùå authAPI –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
  if (authFile.includes('login')) {
    console.log('   ‚úÖ –ú–µ—Ç–æ–¥ login —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  } else {
    console.log('   ‚ùå –ú–µ—Ç–æ–¥ login –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
  if (authFile.includes('register')) {
    console.log('   ‚úÖ –ú–µ—Ç–æ–¥ register —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  } else {
    console.log('   ‚ùå –ú–µ—Ç–æ–¥ register –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
  if (authFile.includes('getProfile')) {
    console.log('   ‚úÖ –ú–µ—Ç–æ–¥ getProfile —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω');
  } else {
    console.log('   ‚ùå –ú–µ—Ç–æ–¥ getProfile –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è auth.ts: ${error.message}`);
  allFilesExist = false;
}

console.log('\nüéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏:');
try {
  const appFile = fs.readFileSync(path.join(__dirname, 'src/app.tsx'), 'utf8');
  
  if (appFile.includes('AuthProvider')) {
    console.log('   ‚úÖ AuthProvider –ø–æ–¥–∫–ª—é—á–µ–Ω');
  } else {
    console.log('   ‚ùå AuthProvider –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    allFilesExist = false;
  }
  
  if (appFile.includes('ProtectedRoute')) {
    console.log('   ‚úÖ ProtectedRoute –ø–æ–¥–∫–ª—é—á–µ–Ω');
  } else {
    console.log('   ‚ùå ProtectedRoute –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    allFilesExist = false;
  }
  
  if (appFile.includes('/profile')) {
    console.log('   ‚úÖ –ú–∞—Ä—à—Ä—É—Ç /profile –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  } else {
    console.log('   ‚ùå –ú–∞—Ä—à—Ä—É—Ç /profile –Ω–µ –Ω–∞–π–¥–µ–Ω');
    allFilesExist = false;
  }
  
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è app.tsx: ${error.message}`);
  allFilesExist = false;
}

console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç:');
if (allFilesExist) {
  console.log('üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
  console.log('\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:');
  console.log('   npm install');
  console.log('   npm start');
  console.log('\nüîó –§—Ä–æ–Ω—Ç–µ–Ω–¥ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8080');
  console.log('\n‚ö†Ô∏è  –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000');
} else {
  console.log('‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏');
}

console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
console.log('1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥: cd backend && uvicorn main:app --reload');
console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: cd frontend && npm start');
console.log('3. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
console.log('4. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É'); 